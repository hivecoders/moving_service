# Generated by Django 5.1.5 on 2025-03-20 01:19

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="DetectedItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("item_class", models.CharField(max_length=50)),
                ("confidence", models.FloatField()),
                ("volume", models.FloatField(default=0.0)),
                ("weight", models.FloatField(default=0.0)),
                ("bbox", models.JSONField()),
                (
                    "image",
                    models.ImageField(
                        default="default.jpg", upload_to="detected_items/"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("full_name", models.CharField(max_length=255)),
                ("phone", models.CharField(blank=True, max_length=15, null=True)),
                (
                    "profile_photo",
                    models.ImageField(
                        blank=True, null=True, upload_to="profile_photos/"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("full_name", models.CharField(max_length=100)),
                ("phone", models.CharField(default="0000000000", max_length=15)),
                (
                    "profile_photo",
                    models.ImageField(
                        blank=True, null=True, upload_to="profile_photos/"
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Mover",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("full_name", models.CharField(max_length=100)),
                ("phone", models.CharField(max_length=15)),
                (
                    "vehicle_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Car", "Car"),
                            ("Small Van", "Small Van"),
                            ("Large Van", "Large Van"),
                        ],
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "mover_type",
                    models.CharField(
                        choices=[
                            ("Pro Mover", "Professional Mover"),
                            ("Mover", "Simple Mover"),
                            ("Box Packer", "Box Packer"),
                            ("Driver with Help", "Driver with Help"),
                            ("Driver without Help", "Driver without Help"),
                        ],
                        max_length=20,
                    ),
                ),
                ("location", models.CharField(max_length=255)),
                ("payment_info", models.CharField(max_length=255)),
                (
                    "driving_license",
                    models.ImageField(blank=True, null=True, upload_to="licenses/"),
                ),
                ("carrying_capacity", models.IntegerField(blank=True, null=True)),
                (
                    "identification_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("has_vehicle", models.BooleanField(default=False)),
                ("has_mover_certification", models.BooleanField(default=False)),
                (
                    "mover_certification_document",
                    models.ImageField(
                        blank=True, null=True, upload_to="certifications/"
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Bid",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Pending", "Pending"),
                            ("Accepted", "Accepted"),
                            ("Rejected", "Rejected"),
                        ],
                        default="Pending",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_winner", models.BooleanField(default=False)),
                (
                    "mover",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="mover_bids",
                        to="users.mover",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MoverProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("bio", models.TextField(blank=True, null=True)),
                ("experience_years", models.IntegerField(default=0)),
                ("certifications", models.TextField(blank=True, null=True)),
                (
                    "hourly_rate",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "mover",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to="users.mover",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "order_code",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("origin", models.CharField(max_length=100)),
                ("destination", models.CharField(max_length=100)),
                ("origin_floor", models.IntegerField(blank=True, null=True)),
                ("destination_floor", models.IntegerField(blank=True, null=True)),
                ("has_elevator", models.BooleanField(default=False)),
                ("need_pro_mover", models.BooleanField(default=False)),
                ("need_box_packer", models.BooleanField(default=False)),
                ("move_date", models.DateField()),
                ("move_time", models.TimeField(blank=True, null=True)),
                ("origin_location", models.CharField(max_length=100)),
                ("destination_location", models.CharField(max_length=100)),
                ("origin_lat", models.FloatField(blank=True, null=True)),
                ("origin_lng", models.FloatField(blank=True, null=True)),
                ("destination_lat", models.FloatField(blank=True, null=True)),
                ("destination_lng", models.FloatField(blank=True, null=True)),
                ("total_volume", models.FloatField(default=0)),
                ("total_weight", models.FloatField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Pending", "Pending"),
                            ("Ongoing", "Ongoing"),
                            ("Completed", "Completed"),
                            ("Canceled", "Canceled"),
                        ],
                        default="Pending",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "bids",
                    models.ManyToManyField(
                        blank=True, related_name="order_bids", to="users.bid"
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customer_orders",
                        to="users.customer",
                    ),
                ),
                (
                    "items_detected",
                    models.ManyToManyField(
                        blank=True, related_name="orders", to="users.detecteditem"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="detecteditem",
            name="order",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="detected_items",
                to="users.order",
            ),
        ),
        migrations.AddField(
            model_name="bid",
            name="order",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="bids_list",
                to="users.order",
            ),
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("date", models.DateTimeField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Pending", "Pending"),
                            ("Completed", "Completed"),
                            ("Failed", "Failed"),
                        ],
                        default="Completed",
                        max_length=20,
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payments",
                        to="users.customer",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Photo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="photos/")),
                (
                    "processed_image",
                    models.ImageField(
                        blank=True, null=True, upload_to="photos/processed/"
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="photos",
                        to="users.order",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProcessedImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("processed_image", models.ImageField(upload_to="processed_images/")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="processed_images",
                        to="users.order",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rating",
                    models.IntegerField(
                        choices=[
                            (1, "⭐"),
                            (2, "⭐⭐"),
                            (3, "⭐⭐⭐"),
                            (4, "⭐⭐⭐⭐"),
                            (5, "⭐⭐⭐⭐⭐"),
                        ]
                    ),
                ),
                ("comment", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="users.customer",
                    ),
                ),
                (
                    "mover",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="users.mover",
                    ),
                ),
                (
                    "order",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="review",
                        to="users.order",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SelectedMover",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("is_paid", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="selected_movers",
                        to="users.customer",
                    ),
                ),
                (
                    "mover",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="selected_movers",
                        to="users.mover",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="selected_movers",
                        to="users.order",
                    ),
                ),
            ],
        ),
    ]
